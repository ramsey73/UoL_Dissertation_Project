// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StellarClothing.Catalog.Infrastructure;

namespace StellarClothing.Catalog.Api.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20200218204926_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Discount");

                    b.Property<double>("NetPrice");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short?>("BrandId");

                    b.Property<int?>("BrandId1");

                    b.Property<byte>("CategoryId");

                    b.Property<int?>("CategoryId1");

                    b.Property<string>("Description");

                    b.Property<string>("InventoryNumber");

                    b.Property<string>("Name");

                    b.Property<int?>("SubCategoryId");

                    b.Property<byte>("SubcategoryId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId1");

                    b.HasIndex("CategoryId1");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.ProductPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt");

                    b.Property<int>("ProductId");

                    b.Property<string>("Source");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPhotos");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("ColorId");

                    b.Property<int?>("ColorId1");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<byte?>("SizeId");

                    b.Property<int?>("SizeId1");

                    b.HasKey("Id");

                    b.HasIndex("ColorId1");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId1");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Price", b =>
                {
                    b.HasOne("StellarClothing.Catalog.Domain.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.Product", b =>
                {
                    b.HasOne("StellarClothing.Catalog.Domain.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId1");

                    b.HasOne("StellarClothing.Catalog.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId1");

                    b.HasOne("StellarClothing.Catalog.Domain.SubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId");
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.ProductPhoto", b =>
                {
                    b.HasOne("StellarClothing.Catalog.Domain.Product", "Product")
                        .WithMany("ProductPhotos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StellarClothing.Catalog.Domain.ProductVariant", b =>
                {
                    b.HasOne("StellarClothing.Catalog.Domain.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId1");

                    b.HasOne("StellarClothing.Catalog.Domain.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StellarClothing.Catalog.Domain.Size", "Size")
                        .WithMany("ProductVariants")
                        .HasForeignKey("SizeId1");
                });
#pragma warning restore 612, 618
        }
    }
}
